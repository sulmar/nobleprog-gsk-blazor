@page "/customers"
@using Domain.Abstractions
@using Domain.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorServerApp.Components.Shared
@inject ICustomerRepository Repository
@* @rendermode InteractiveServer *@
@rendermode @(new InteractiveServerRenderMode(prerender:false))

<h3>List</h3>

<Loader Message="Loading customers..." Items="@customers">

    <SearchPanel SearchEventCallback=@OnSearch />

    <CustomerTableTemplate Items=@customers>
        <HeaderTemplate>
            <th>Id</th>
            <th>Name</th>
        </HeaderTemplate>

        <RowTemplate Context="customer">
            <td>@customer.Id</td>
            <td>@customer.Name</td>
        </RowTemplate>
    </CustomerTableTemplate>

    <QuickGrid Class="table table-striped" Items="@customers">
        <PropertyColumn Property="@(p=>p.Id)" />
        <PropertyColumn Property="@(p=>p.Name)" />
    </QuickGrid>

</Loader>

@code {
  

   

    private IQueryable<Customer> customers;

    // protected override async Task OnInitializedAsync()
    // {
    //     await Task.Delay(3000);

    //     customers = await Repository.GetAllAsync();
    // }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {                    
            await Task.Delay(3000);

            customers = await Repository.GetAllAsync();

            StateHasChanged();
            
            
        }
    }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     if (firstRender)
    //     {
    //         await Task.Delay(3000);

    //         customers = await Repository.GetAllAsync();

    //         StateHasChanged();
    //     }
    // }

   
    private async Task OnSearch(string searchText)
    {
        customers = await Repository.GetByNameAsync(searchText);
    }

   

}
