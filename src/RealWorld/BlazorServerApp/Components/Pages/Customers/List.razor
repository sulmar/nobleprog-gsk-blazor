@page "/customers"
@using Domain.Abstractions
@using Domain.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorServerApp.Components.Shared
@inject ICustomerRepository Repository
@* @rendermode InteractiveServer *@
@rendermode @(new InteractiveServerRenderMode(prerender:false))

<h3>List</h3>

<Loader Message="Loading customers..." Items="@customers">

    <div class="search-panel">
        <label for="searchText">Search: </label>
        <input type="text" id="searchText" @bind=@searchText />

        <button type="button" class="btn btn-primary" @onclick=@Search>Search</button>
    </div>

    <CustomerTableTemplate Items=@customers>
        <HeaderTemplate>
            <th>Id</th>
            <th>Name</th>
        </HeaderTemplate>

        <RowTemplate Context="customer">
            <td>@customer.Id</td>
            <td>@customer.Name</td>
        </RowTemplate>
    </CustomerTableTemplate>

    <QuickGrid Class="table table-striped" Items="@customers">
        <PropertyColumn Property="@(p=>p.Id)" />
        <PropertyColumn Property="@(p=>p.Name)" />
    </QuickGrid>

</Loader>

@code {
    private string searchText = "abc";

    private IQueryable<Customer> customers;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(3000);

        customers = await Repository.GetAllAsync();
    }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     if (firstRender)
    //     {
    //         await Task.Delay(3000);

    //         customers = await Repository.GetAllAsync();

    //         StateHasChanged();
    //     }
    // }

    private async Task Search()
    {
        customers = await Repository.GetByNameAsync(searchText);
    }

}
