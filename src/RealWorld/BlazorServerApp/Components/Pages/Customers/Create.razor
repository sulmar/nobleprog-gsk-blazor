@page "/customers/create"
@inject ICustomerRepository Repository
@inject NavigationManager NavigationManager

<h3>Create</h3>

<EditForm Model=@customer OnValidSubmit=@OnSubmitAsync FormName="customerForm">

    <DataAnnotationsValidator />

    <ValidationSummary />

    <div class="form-group">
        <label>
            Name
            <InputText @bind-Value=@customer.Name class="form-control" />
            <ValidationMessage For="()=>customer.Name" />
        </label>
    </div>

    <div class="form-group">
        <label>
            Description
            <InputTextArea @bind-Value=@customer.Description class="form-control" />
            <ValidationMessage For="()=>customer.Description" />
        </label>
    </div>

     <div class="form-group">
        <label>
            Account
            <InputText @bind-Value=@customer.Account class="form-control" />
            <ValidationMessage For="()=>customer.Account" />
        </label>
    </div>

    <div class="form-group">
        <label>
            Password
            <InputText type="password" placeholder="Password" @bind-Value=@customer.Password class="form-control" />
            <ValidationMessage For="()=>customer.Password" />
        </label>
    </div>

    <div class="form-group">
        <label>
            Confirm Password
            <InputText type="password" placeholder="Confirm Password"  @bind-Value=@customer.ConfirmPassword class="form-control" />
            <ValidationMessage For="()=>customer.ConfirmPassword" />
        </label>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>

</EditForm>

@code {

    [SupplyParameterFromForm]
    Customer customer { get; set; }

    protected override void OnInitialized()
    {
        // if (customer is null)
        // {
        //     customer = new Customer();
        // }

        customer ??= new Customer();
    }

    private async Task OnSubmitAsync()
    {
        Console.WriteLine($"Create a customer {customer.Id} {customer.Name}");

        await Repository.Add(customer);

        NavigationManager.NavigateTo("/customers");
    }

}
